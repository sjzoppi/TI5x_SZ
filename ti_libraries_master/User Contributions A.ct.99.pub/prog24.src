
; 3D Tic Tac Toe
; http://www.rskey.org/gene/calcgene/593dttt.htm

; The boards are 3 levels of 9 squares, they are numbered as follows:

; [ 1  2  3  ]
; [ 4  5  6  ]
; [ 7  8  9  ]

; [ 10 11 12 ]
; [ 13 14 15 ]
; [ 16 17 18 ]

; [ 19 20 21 ]
; [ 22 23 24 ]
; [ 25 26 27 ]

; R01 .. R27  : value in the corresponding square
;               Rn = value in the position 0=empty ; 1=player ; 4=TI

INV SBR
GTO A

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; D'
Lbl D'
STO 30
GTO 018

RCL 31        ;; #010
SUM 28
SUM 29
SUM 30

RCL Ind 28    ;; #018
+
RCL Ind 29
+
RCL Ind 30
=
STO 34        ;; sum of values in 3 squares in R34 and t
x⇌t
Ifflg Ind 34 324
2
x=t 301       ;; will set flags 2, 4, 1, 0
8
x=t 299       ;; will set flags 8, 2, 4, 1, 0
4
INV x≥t 324
x=t 303       ;; will set flags 4, 1, 0
1
x=t 305       ;; will set flags 1, 0
0
x=t 307       ;; will set flags 0
3513373673    ;; #059 'RATS!' (no winer!)
D             ;; display board
0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; E

Lbl E         ;; #071
CMs
RST

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; A
;; R28 R29 R30 position to check
;; R31         number to add to R28/R29/R30 for next check
;; R00         number of check to do
;; R32         current square

Lbl A
STO 32
CLR
CP
RCL Ind 32  ;; check that case is empty = 0
x=t 089
0           ;; flashing display
1/x
RST

            ;;                              loop  add R28 R29 R30
14          ;; #089  (diag 1 / 14 / 27)
STO 28
27
STO 29
1
STO 31      ;; add 1 to next check
STO Ind 32  ;; r[32] = 1 (user owned)
STO 00      ;; a single check
D'          ;;                    BEFORE:     1     1  14  27   1
            ;;                     AFTER:     1     1  14  27   1

3
STO 00      ;; number of check to do
1           ;; (1 / 5 / 9)
STO 29
5
STO 28
9
STO 31      ;; add 9 to each index for next check
D'          ;;                    BEFORE:     3     9   9   1   9
            ;;                     AFTER:     3     9  23  19  27

3
STO 00      ;; (3 / 5 / 7)
STO 29
5
STO 28
7
D'          ;;                    BEFORE:     3     9   5   3   7
            ;;                     AFTER:     3     9  23  21  25

14          ;; (9 / 14 / 19)
STO 28
9
STO 29
19
D'

3           ;; (3 / 14 /25)
STO 29
25
D'

21          ;; (7 / 14 / 21)
STO 29
7
D'

3           ;; (1 / 11 / 21)
STO 00
STO 31
1
STO 28
11
D'

3           ;; (3 / 11 / 19)
STO 00
STO 28
19
STO 29
11
D'

3           ;; (1 / 13 / 25)
STO 00
1
STO 28
STO 31
13
D'

3           ;; (7 / 13 / 19)
STO 00
7
STO 28
19
STO 29
13
D'

9           ;; (1 / 10 / 19)
STO 00
1
STO 28
19
STO 29
10
D'

9           ;; (1 / 2 / 3)
STO 00
1
STO 28
3
STO 29
STO 31
2
D'

3           ;; (1 / 4 / 7)
STO 00
1
STO 28
STO 31
7
STO 29
4
D'

3           ;; (10 / 13 / 16)
STO 00
10
STO 28
16
STO 29
13
D'

3           ;; (19 / 22 / 25)
STO 00
19
STO 28
25
STO 29
22
D'

Ifflg 0 277
151337      ;; 'CAT'
D
0
E
4           ;; #277
STO Ind 32
Ifflg 8 287 ;; TI WIN
RCL 32
RST
2400432431  ;; #287 'I WIN'
D
E
Stflg 8     ;; #299
Stflg 2     ;; #301
Stflg 4     ;; #303
Stflg 1     ;; #305
Stflg 0     ;; #307
CP
RCL Ind 28  ;; if *R28 = 0 store R28 into R32
x=t 329
RCL Ind 29  ;; if *R29 = 0 store R29 into R32
x=t 334
RCL 30      ;; otherwise R30 into R32
STO 32      ;; #322
Dsz 0 010   ;; #324
INV SBR

RCL 28      ;; #329
GTO 322
RCL 29      ;; #334
GTO 322
620000      ;; #339 '$  '
+
Op 20       ;; #346
RCL Ind 00
x≥t 354     ;; a TI position
INV SBR
50          ;; #354 'X'
INV SBR

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; D
Lbl D
.
Op 03            ;; current number into print reg: [] [] [X] []
0                ;; r0 := 0
STO 00           ;; r0 is index for current square to print
3
STO 35           ;; r35 := 3 (counter for loop, 3 plates to display)
x⇌t              ;; t := 3
1
STO 36           ;; r36 := 1 (this is the print register to use)

SBR 408          ;; print squares
SBR 408          ;; likewise
GTO 408          ;; again, but will stop on return #452

2047202000       ;; #381 '-+-- '  (print separator)
Op Ind 36        ;; add number into print register pointed to by 36

Dsz 36 51        ;; just decrement register pointed to by 36 (not jump!)
                 ;; exploit a TI-59 hidden feature/bug as 51 is not a proper
                 ;; op-code.

2020472020       ;; '--+--'
Op Ind 36

Op 05            ;; #408  print reg
Op 00            ;;       clear print reg
SBR 346
EE
8
INV EE
+
SBR 339
=
Op Ind 36       ;; put into print register
1
SUM 36          ;; next print register
SBR 339
=
Fix 2
Op Ind 36       ;; put into print register
INV Fix
Op 05           ;; print reg

Dsz 35 381      ;; decrement 35, jump 381

3
STO 35          ;; set back 3 in counter loop
Op 00           ;; clear print register
RCL 32
INV SBR         ;; #452
GTO A
